class PostsController < ApplicationController
  def index
    # #11 declare an instance variable "@posts" and assign it a collection of "Post" objects using the "all" method provided by ActiveRecord. "all" returns a collection of "Post" objects
    @posts = Post.all
  end

  def show
    # #19 find the post that corresponds to the id in the params that was passed to "show" and assign it to @post. Unlike in the "index' method, in the "show" method, we populate an instance variable with a single post, rather than a collection of posts
    @post = Post.find(params[:id])
  end

  def new
    # #7 create an instance variable, @post, then assign it an empty post returned by Post.new
    @post = Post.new
  end

  def create
    # #9 call Post.new to create a new instance of Post
    @post = Post.new
    @post.title = params[:post][:title]
    @post.body = params[:post][:body]
    # #10 if we successfully save Post to the database, we display a success message using flash[:notice] and redirect the user to the route generated by @post. Redirecting to @post will direct the user to the posts show view
    if @post.save
      # #11 assign a value to flash[:notice]. The "flash" hash provides a way to pass temporary values between actions. Any value placed in "flash" will be available in the next action and then deleted
      flash[:notice] = "Post was saved."
      redirect_to @post
    else
      # #12 if we do not successfully save Post to the database, we display an error message and render the new view again
      flash.now[:alert] = "There was an error saving the post. Please try again."
      render :new
    end
  end

  def edit
    @post = Post.find(params[:id])
  end

  def update
    @post = Post.find(params[:id])
    @post.title = params[:post][:title]
    @post.body = params[:post][:body]

    if @post.save
      flash[:notice] = "Post was updated."
      redirect_to @post
    else
      flash.now[:alert] = "There was an error saving your post. Please try again."
      render :edit
    end
  end

  def destroy
    @post = Post.find(params[:id])
    # #8 call destroy on @post. If that call successful, we set a flash message and redirect the user to the posts index view. If destroy fails then we redirect user to the show view using render :show
    if @post.destroy
      flash[:notice] = "\"#{@post.title}\" was deleted successfully."
      redirect_to posts_path
    else
      flash.now[:alert] = "There was an error deleting the post."
      render :show
    end
  end
end
